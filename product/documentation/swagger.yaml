openapi: 3.0.0
info:
  title: Pranksome potato BE
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

servers:
  - url: https://ufclbh8316.execute-api.eu-west-1.amazonaws.com/dev/
    description: Optional server description, e.g. Main (production) server

paths:
  /products:
    get:
      summary: Returns a list of products.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200': # status code
          description: A JSON array of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    count:
                      type: number
                    description:
                      type: string
                    id:
                      type: string
                    price:
                      type: number
                    title:
                      type: string
                    imageId:
                      type: string

  /products/{productId}:
    get:
      summary: Returns a product by its id.
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: path
          name: productId
          description: Id of the product to be fetched
          required: true
          schema:
            type: string
      responses:
        200:
          description: Product fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  description:
                    type: string
                  id:
                    type: string
                  price:
                    type: number
                  title:
                    type: string
                  imageId:
                    type: string
        400:
          description: JSON object with error messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    example:
                      productId: 'Id from the path was not provided'
